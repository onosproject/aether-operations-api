schema:
  - internal/graph/schemas/*.graphql

exec:
  filename: gen/graph/generated.go
#  layout: follow-schema
#  dir: gen/graph
  package: generated

# Where should any generated models go?
# Where should any generated models go?
model:
#  layout: follow-schema
  filename: gen/graph/model/models_gen.go
  package: model

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
#autobind:
#  - "github.com/onosproject/scaling-umbrella/api"

# Where should the resolver implementations go?
#resolver:
#  layout: follow-schema
#  dir: gen
#  package: gen
#  filename_template: "{name}.resolvers.go"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
