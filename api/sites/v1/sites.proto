// SPDX-FileCopyrightText: 2022-present Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package sites.v1;

option go_package = "github.com/onosproject/scaling-umbrella/gen/go/sites/v1";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/field_behavior.proto";
import "pb/graphql.proto";
import "google/api/annotations.proto";

import "devices/v1/devices.proto";
import "slices/v1/slices.proto";

message Site {
  string site_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {title: "The ID field.", description: "Unique identifier for sites", pattern: "[a-zA-Z]"},
    (google.api.field_behavior) = REQUIRED
  ];
  string name = 2;
  string description = 3;
  repeated devices.v1.Device devices = 4;
  repeated slices.v1.Slice slices = 5;
//  repeated smallcells.v1.SmallCell small_cells = 6;
//  repeated simcards.v1.SimCard sim_cards = 7;
}

message GetSitesResponse {
  repeated Site sites = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "A list of Site objects"}];
}

message GetSitesRequest {
  string enterprise_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "[a-zA-Z]",
    title: "EnterpriseId",
    description: "Unique identifier for enterprise",
    format: "string",
    example: "\"acme\""
  }];
}

service SiteService {
  rpc GetSites(GetSitesRequest) returns (sites.v1.GetSitesResponse) {
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
    option (google.api.http) = {
      get: "/api/v1/enterprises/{enterprise_id}/sites",
      additional_bindings {
        // NOTE all the fields in the Request Parameter (EnterpriseId) which are not in the path
        // are automatically added to query parameters
        get: "/api/v1/sites"
      }
    };
  }
}