// Code generated by proroc-gen-graphql, DO NOT EDIT.
package v1

import (
	"github.com/graphql-go/graphql"
)

var (
	gql__type_Enterprises  *graphql.Object      // message Enterprises in api/v1/enterprise.proto
	gql__type_Enterprise   *graphql.Object      // message Enterprise in api/v1/enterprise.proto
	gql__input_Enterprises *graphql.InputObject // message Enterprises in api/v1/enterprise.proto
	gql__input_Enterprise  *graphql.InputObject // message Enterprise in api/v1/enterprise.proto
)

func Gql__type_Enterprises() *graphql.Object {
	if gql__type_Enterprises == nil {
		gql__type_Enterprises = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Enterprises",
			Fields: graphql.Fields{
				"enterprises": &graphql.Field{
					Type: graphql.NewList(Gql__type_Enterprise()),
				},
			},
		})
	}
	return gql__type_Enterprises
}

func Gql__type_Enterprise() *graphql.Object {
	if gql__type_Enterprise == nil {
		gql__type_Enterprise = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Enterprise",
			Fields: graphql.Fields{
				"ID": &graphql.Field{
					Type: graphql.String,
				},
				"description": &graphql.Field{
					Type: graphql.String,
				},
				"displayName": &graphql.Field{
					Type: graphql.String,
				},
				"applications": &graphql.Field{
					Type: graphql.NewList(Gql__type_Application()),
				},
			},
		})
	}
	return gql__type_Enterprise
}

func Gql__input_Enterprises() *graphql.InputObject {
	if gql__input_Enterprises == nil {
		gql__input_Enterprises = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Enterprises",
			Fields: graphql.InputObjectConfigFieldMap{
				"enterprises": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(Gql__input_Enterprise()),
				},
			},
		})
	}
	return gql__input_Enterprises
}

func Gql__input_Enterprise() *graphql.InputObject {
	if gql__input_Enterprise == nil {
		gql__input_Enterprise = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Enterprise",
			Fields: graphql.InputObjectConfigFieldMap{
				"ID": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"description": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"displayName": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"applications": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(Gql__input_Application()),
				},
			},
		})
	}
	return gql__input_Enterprise
}
