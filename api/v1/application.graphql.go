// Code generated by proroc-gen-graphql, DO NOT EDIT.
package v1

import (
	"github.com/graphql-go/graphql"
)

var (
	gql__type_Applications  *graphql.Object      // message Applications in api/v1/application.proto
	gql__type_Application   *graphql.Object      // message Application in api/v1/application.proto
	gql__input_Applications *graphql.InputObject // message Applications in api/v1/application.proto
	gql__input_Application  *graphql.InputObject // message Application in api/v1/application.proto
)

func Gql__type_Applications() *graphql.Object {
	if gql__type_Applications == nil {
		gql__type_Applications = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Applications",
			Fields: graphql.Fields{
				"applications": &graphql.Field{
					Type: graphql.NewList(Gql__type_Application()),
				},
			},
		})
	}
	return gql__type_Applications
}

func Gql__type_Application() *graphql.Object {
	if gql__type_Application == nil {
		gql__type_Application = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Application",
			Fields: graphql.Fields{
				"ID": &graphql.Field{
					Type: graphql.String,
				},
				"description": &graphql.Field{
					Type: graphql.String,
				},
				"endpoint": &graphql.Field{
					Type: graphql.NewList(Gql__type_Endpoint()),
				},
			},
		})
	}
	return gql__type_Application
}

func Gql__input_Applications() *graphql.InputObject {
	if gql__input_Applications == nil {
		gql__input_Applications = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Applications",
			Fields: graphql.InputObjectConfigFieldMap{
				"applications": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(Gql__input_Application()),
				},
			},
		})
	}
	return gql__input_Applications
}

func Gql__input_Application() *graphql.InputObject {
	if gql__input_Application == nil {
		gql__input_Application = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Application",
			Fields: graphql.InputObjectConfigFieldMap{
				"ID": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"description": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"endpoint": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(Gql__input_Endpoint()),
				},
			},
		})
	}
	return gql__input_Application
}
