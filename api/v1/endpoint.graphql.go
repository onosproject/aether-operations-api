// Code generated by proroc-gen-graphql, DO NOT EDIT.
package v1

import (
	"github.com/graphql-go/graphql"
)

var (
	gql__type_MBR        *graphql.Object      // message MBR in api/v1/endpoint.proto
	gql__type_Endpoints  *graphql.Object      // message Endpoints in api/v1/endpoint.proto
	gql__type_Endpoint   *graphql.Object      // message Endpoint in api/v1/endpoint.proto
	gql__input_MBR       *graphql.InputObject // message MBR in api/v1/endpoint.proto
	gql__input_Endpoints *graphql.InputObject // message Endpoints in api/v1/endpoint.proto
	gql__input_Endpoint  *graphql.InputObject // message Endpoint in api/v1/endpoint.proto
)

func Gql__type_MBR() *graphql.Object {
	if gql__type_MBR == nil {
		gql__type_MBR = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_MBR",
			Fields: graphql.Fields{
				"uplink": &graphql.Field{
					Type: graphql.Int,
				},
				"downlink": &graphql.Field{
					Type: graphql.Int,
				},
			},
		})
	}
	return gql__type_MBR
}

func Gql__type_Endpoints() *graphql.Object {
	if gql__type_Endpoints == nil {
		gql__type_Endpoints = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Endpoints",
			Fields: graphql.Fields{
				"endpoints": &graphql.Field{
					Type: graphql.NewList(Gql__type_Endpoint()),
				},
			},
		})
	}
	return gql__type_Endpoints
}

func Gql__type_Endpoint() *graphql.Object {
	if gql__type_Endpoint == nil {
		gql__type_Endpoint = graphql.NewObject(graphql.ObjectConfig{
			Name: "V1_Type_Endpoint",
			Fields: graphql.Fields{
				"ID": &graphql.Field{
					Type: graphql.String,
				},
				"Description": &graphql.Field{
					Type: graphql.String,
				},
				"DisplayName": &graphql.Field{
					Type: graphql.String,
				},
				"Mbr": &graphql.Field{
					Type: Gql__type_MBR(),
				},
				"PortStart": &graphql.Field{
					Type: graphql.Int,
				},
				"PortEnd": &graphql.Field{
					Type: graphql.Int,
				},
				"Protocol": &graphql.Field{
					Type: graphql.String,
				},
			},
		})
	}
	return gql__type_Endpoint
}

func Gql__input_MBR() *graphql.InputObject {
	if gql__input_MBR == nil {
		gql__input_MBR = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_MBR",
			Fields: graphql.InputObjectConfigFieldMap{
				"uplink": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
				"downlink": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
			},
		})
	}
	return gql__input_MBR
}

func Gql__input_Endpoints() *graphql.InputObject {
	if gql__input_Endpoints == nil {
		gql__input_Endpoints = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Endpoints",
			Fields: graphql.InputObjectConfigFieldMap{
				"endpoints": &graphql.InputObjectFieldConfig{
					Type: graphql.NewList(Gql__input_Endpoint()),
				},
			},
		})
	}
	return gql__input_Endpoints
}

func Gql__input_Endpoint() *graphql.InputObject {
	if gql__input_Endpoint == nil {
		gql__input_Endpoint = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "V1_Input_Endpoint",
			Fields: graphql.InputObjectConfigFieldMap{
				"ID": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"Description": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"DisplayName": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
				"Mbr": &graphql.InputObjectFieldConfig{
					Type: Gql__input_MBR(),
				},
				"PortStart": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
				"PortEnd": &graphql.InputObjectFieldConfig{
					Type: graphql.Int,
				},
				"Protocol": &graphql.InputObjectFieldConfig{
					Type: graphql.String,
				},
			},
		})
	}
	return gql__input_Endpoint
}
