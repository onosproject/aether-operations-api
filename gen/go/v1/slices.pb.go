// SPDX-FileCopyrightText: 2022-present Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: slices.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Slice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Slice) Reset() {
	*x = Slice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slice) ProtoMessage() {}

func (x *Slice) ProtoReflect() protoreflect.Message {
	mi := &file_slices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slice.ProtoReflect.Descriptor instead.
func (*Slice) Descriptor() ([]byte, []int) {
	return file_slices_proto_rawDescGZIP(), []int{0}
}

func (x *Slice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Slice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Slice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetSlicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slices []*Slice `protobuf:"bytes,1,rep,name=slices,proto3" json:"slices,omitempty"`
}

func (x *GetSlicesResponse) Reset() {
	*x = GetSlicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlicesResponse) ProtoMessage() {}

func (x *GetSlicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlicesResponse.ProtoReflect.Descriptor instead.
func (*GetSlicesResponse) Descriptor() ([]byte, []int) {
	return file_slices_proto_rawDescGZIP(), []int{1}
}

func (x *GetSlicesResponse) GetSlices() []*Slice {
	if x != nil {
		return x.Slices
	}
	return nil
}

type GetSlicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId string `protobuf:"bytes,1,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	SiteId       string `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
}

func (x *GetSlicesRequest) Reset() {
	*x = GetSlicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlicesRequest) ProtoMessage() {}

func (x *GetSlicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlicesRequest.ProtoReflect.Descriptor instead.
func (*GetSlicesRequest) Descriptor() ([]byte, []int) {
	return file_slices_proto_rawDescGZIP(), []int{2}
}

func (x *GetSlicesRequest) GetEnterpriseId() string {
	if x != nil {
		return x.EnterpriseId
	}
	return ""
}

func (x *GetSlicesRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

var File_slices_proto protoreflect.FileDescriptor

var file_slices_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x05, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x12, 0x4f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f,
	0xe0, 0x41, 0x02, 0x92, 0x41, 0x39, 0x2a, 0x0d, 0x54, 0x68, 0x65, 0x20, 0x49, 0x44, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x2e, 0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73,
	0x6c, 0x69, 0x63, 0x65, 0x8a, 0x01, 0x08, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x42, 0x1c, 0x92, 0x41, 0x19, 0x32, 0x17, 0x41, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x06,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x0d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x52, 0x92, 0x41, 0x4f, 0x2a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x32, 0x23, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4a, 0x06, 0x22, 0x61, 0x63, 0x6d,
	0x65, 0x22, 0x8a, 0x01, 0x08, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0xa2, 0x02, 0x06,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4d, 0x92, 0x41, 0x4a, 0x2a, 0x06, 0x53, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x32, 0x1c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x69, 0x74, 0x65,
	0x4a, 0x0e, 0x22, 0x61, 0x63, 0x6d, 0x65, 0x2d, 0x63, 0x68, 0x69, 0x63, 0x61, 0x67, 0x6f, 0x22,
	0x8a, 0x01, 0x08, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0xa2, 0x02, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x32, 0xad, 0x01, 0x0a,
	0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x6c, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x5a, 0x10,
	0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x42, 0x33, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x2d, 0x75,
	0x6d, 0x62, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_slices_proto_rawDescOnce sync.Once
	file_slices_proto_rawDescData = file_slices_proto_rawDesc
)

func file_slices_proto_rawDescGZIP() []byte {
	file_slices_proto_rawDescOnce.Do(func() {
		file_slices_proto_rawDescData = protoimpl.X.CompressGZIP(file_slices_proto_rawDescData)
	})
	return file_slices_proto_rawDescData
}

var file_slices_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_slices_proto_goTypes = []interface{}{
	(*Slice)(nil),             // 0: slices.v1.Slice
	(*GetSlicesResponse)(nil), // 1: slices.v1.GetSlicesResponse
	(*GetSlicesRequest)(nil),  // 2: slices.v1.GetSlicesRequest
}
var file_slices_proto_depIdxs = []int32{
	0, // 0: slices.v1.GetSlicesResponse.slices:type_name -> slices.v1.Slice
	2, // 1: slices.v1.SliceService.GetSlices:input_type -> slices.v1.GetSlicesRequest
	1, // 2: slices.v1.SliceService.GetSlices:output_type -> slices.v1.GetSlicesResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_slices_proto_init() }
func file_slices_proto_init() {
	if File_slices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_slices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_slices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_slices_proto_goTypes,
		DependencyIndexes: file_slices_proto_depIdxs,
		MessageInfos:      file_slices_proto_msgTypes,
	}.Build()
	File_slices_proto = out.File
	file_slices_proto_rawDesc = nil
	file_slices_proto_goTypes = nil
	file_slices_proto_depIdxs = nil
}
